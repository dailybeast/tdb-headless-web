---
import type { CustomEmbedBlock } from '@/lib/types';

interface Props {
  block: CustomEmbedBlock;
  class?: string;
}

const { block, class: className } = Astro.props;

const videoCode = block.embed?.config?.videoCode;
const caption = block.embed?.config?.caption;
const isVideoPlayer = block.subtype === 'videoplayer';
const isSectionBreak = block.subtype === 'section_break';
---

{isSectionBreak ? (
  <div class={`my-12 ${className || ''}`}>
    <hr class="border-border" />
  </div>
) : isVideoPlayer && videoCode ? (
  <div class={`my-8 ${className || ''}`}>
    <div class="aspect-video w-full overflow-hidden rounded-lg bg-muted">
      <div set:html={videoCode} />
    </div>
    {caption && (
      <div class="mt-3 text-sm text-muted-foreground">
        {caption}
      </div>
    )}
  </div>
) : (
  <div class={`my-6 p-4 bg-muted rounded-lg ${className || ''}`}>
    <div class="text-sm text-muted-foreground">
      Custom embed: {block.subtype}
    </div>
    {caption && (
      <div class="mt-2 text-sm">{caption}</div>
    )}
  </div>
)}